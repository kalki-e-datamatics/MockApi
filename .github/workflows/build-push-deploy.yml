name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_REPO: kalki5/mockapi
  AWS_REGION: us-west-2
  EKS_CLUSTER_NAME: freelaw
  EKS_NAMESPACE: cl
  EKS_DEPLOYMENT: mockapi
  EKS_CONTAINER_NAME: web

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . -f Dockerfile -t ${{ env.IMAGE_REPO }}:$(cat version.txt)
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Push the Docker image
      run: docker push ${{ env.IMAGE_REPO }}:$(cat version.txt)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Create Kubeconfig with AWS CLI
      run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
    - name: Rollout the new version
      run: kubectl set image -n ${{ env.EKS_NAMESPACE }} deployment/${{ env.EKS_DEPLOYMENT }} ${{ env.EKS_CONTAINER_NAME }}=${{ env.IMAGE_REPO }}:$(cat version.txt)
    - name: Watch the new rollout status
      run: kubectl rollout status -n ${{ env.EKS_NAMESPACE }} deployment/${{ env.EKS_DEPLOYMENT }}
